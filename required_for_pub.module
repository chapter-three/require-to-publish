<?php

/**
 * Implements of hook_help().
 */
function required_for_pub_help($path, $arg) {
  switch ($path) {
    case 'admin/help#required_for_pub':
      return t('Allows forms to be filled without required fields before publishing.');
  }
}

/**
 * Implements of hook_field_info_alter(&$info).
 */
function required_for_pub_field_info_alter(&$info) {
  // Add a setting to all field types.
  foreach ($info as $field_type => &$field_type_info) {
  $field_type_info += array('instance_settings' => array());
	$field_type_info['instance_settings'] += array(
      'required_for_pub' => false,
    );
  }
}

/**
 * Implements of hook_field_ui_field_edit_form_alter(&$form, &$form_state, $form_id).
 */
function required_for_pub_form_field_ui_field_edit_form_alter(&$form, &$form_state, $form_id) {

  $form['instance']['required']['#access'] = FALSE;  // the 'Require field' form element will be handled by the form element below -- as one of the options.
  
  $DEPRECATEDxxxform['instance']['required_for_pub'] = array(
    '#type' => 'checkbox',
    '#title' => t('Required for publishing'),
    '#description' => t('Allows the form to be saved in unpublished state without entering the required fields.'),
    // REMOVED - '#default_value' => isset($form['#instance']['required_for_pub']) ? $form['#instance']['required_for_pub'] : FALSE,
    '#default_value' => empty($form['#instance']['required_for_pub']) ? 0 : 1,  // new way
    // REMOVED: '#element_validate' => array('_required_for_pub_field_settings_validate'),
    '#weight' => -9,
  );
  
  // user can now choose from 3 options: required, reuired_for_pub, or not required
  $form['instance']['required_for_pub'] = array(
    '#type' => 'radios',
    '#title' => t('Required for publishing'),
    '#description' => t('Allows the form to be saved in unpublished state without entering the required fields.'),
    '#default_value' => empty($form['#instance']['required_for_pub']) ? NULL : $form['#instance']['required_for_pub'], 
    '#weight' => -9,
    '#options' => array(
      'not_required' => 'Not Required',
      'required' => 'Required field',
      'required_for_pub' => 'Required for publishing',
    ),  
  ); 
  
  $form['#validate'][] = '_required_for_pub_field_settings_validate';
}

/**
 * Custom validation for the field_ui_field_edit_form
 */
function _required_for_pub_field_settings_validate($form, &$form_state) {

  // choice is either 'required' or 'required_for_pub_2'
  $choice = $form_state['values']['instance']['required_for_pub'];
  
  switch ($choice) {
    case 'required':
      $form_state['values']['instance']['required'] = 1;
      $form_state['values']['instance']['required_for_pub'] = 'required';
      break;
    case 'required_for_pub':
      $form_state['values']['instance']['required_for_pub'] = 'required_for_pub';
      $form_state['values']['instance']['required'] = 0;
      break;      
    case 'not_required':
      $form_state['values']['instance']['required_for_pub'] = 'not_required';
      $form_state['values']['instance']['required'] = 0;
      break;  
  }
  return TRUE;
}




/**
 * Implements hook_field_attach_form()
 */
function required_for_pub_field_attach_form($entity_type, $entity, &$form, &$form_state, $langcode = NULL, $options = array()) {

  $form['#validate'][] = 'required_for_pub_form_validate';

  $obj = entity_metadata_wrapper('node', $entity);

  // get all fields in the node form_state
  $fields = $form_state['field'];

  $fields_required_for_pub = array();  
  foreach ($fields as $field_name => $arr) {
    if (!isset($arr[$langcode]['instance']['required_for_pub'])) { // value can be 0 or NULL
      continue;
    }
    if ( $arr[$langcode]['instance']['required_for_pub'] == 'required_for_pub' ) {  // create an array of fields where required_for_pub is  TRUE // TODO: no need for an if . already checked by isset 4 lines above
      $fields_required_for_pub[] = $field_name;    
    }
  }
  $form_state['required_for_pub']['#fields'] = $fields_required_for_pub;
}



/**
 * Custom validation for the entity add or edit forms
 */
function required_for_pub_form_validate($form, &$form_state) {

  $status = $form_state['values']['status'];
  $lang = $form_state['values']['language'];  
  $empty_fields = array();

  foreach ($form_state['required_for_pub']['#fields'] as $key => $field_name) {
    if (empty($form_state['values'][$field_name][$lang][0])) {
      $item = $form_state['values'][$field_name][$lang];  // some fields do not use any delta or the 0 offset. example: term reference does not use the 0 offset when the field is empty
    }
    else { 
      $item =  $form_state['values'][$field_name][$lang][0];
    }  

    // get the field info
    $field = field_info_field($field_name);

    // get the module that defined the hook_field_is_empty
    $module = $field['module'];
    
    // get the field type
    $field_type = $field['type'];
    
    // get the function name which is in this format: called module_field_is_empty(), where module is the module that defined the field
    $func = $module.'_field_is_empty';
    
    // special handling for booleans
    // NOTE: the list.module's hook_field_is_empty specifies this: 
    // if (empty($item['value']) && (string) $item['value'] !== '0') { return TRUE; }
    // paramter $item passed is array('value' => 0) -- if user has not clicked the wdiget form
    // which means that the boolean field will always return hook_field_is_empty to be FALSE -- that is, the field contains data. when in fact, it should be treated as EMPTY.
    // hence, we convert the value from 0 to NULL or set $item to NULL
    if ($field_type == 'list_boolean') {
      if ($item['value'] == 0) {
        //$item['value'] = NULL;
        $item = NULL;
      }
    }
    
    // special handling for fields that do no use delta or the 0 offset.
    if (empty($item)) {
      $field_is_empty = TRUE;
    }
    else { 
      $field_is_empty = call_user_func($func, $item, $field);
    }
    
    // TO CHECK if field is empty -- this will account for all field types
    if ($field_is_empty) {
      $empty_fields[] = $field_name;
    }
  }
  
  // the most important validation
  $field_string = "";
  $digit = 1;
  if ($status == 1 && !empty($empty_fields) ) {
    form_set_error('required_for_pub', t('You must do "a" or "b": <p>a. Save this node as DRAFT - by unchecking the publish state.</p> <p>b. Or leave the node as published but FILL UP the fields listed below.</p>'));       

    foreach ($empty_fields as $key => $field_name) {
      $field_string = $field_name;
      form_set_error('required_for_pub'.'_'.$field_name, t('%digit. %field_name', array('%field_name' => $field_string, '%digit' => $digit)));
      $digit = $digit + 1;
    }
    
    return FALSE;
    
  }
  else {
    return TRUE;
  }
  return FALSE;
}


